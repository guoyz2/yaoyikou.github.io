const e=JSON.parse('{"key":"v-11239305","path":"/%E5%89%8D%E7%AB%AF/%E9%9D%A2%E8%AF%95%E9%A2%98/js%E5%9F%BA%E7%A1%80.html","title":"js","lang":"zh-CN","frontmatter":{"date":"2023-09-28T00:00:00.000Z","category":["面试题","js"],"description":"js 数组的常用方法 push()：向数组末尾添加一个或多个元素，并返回新的数组长度4 pop()：删除数组最后一个元素，并返回被删除的元素 shift()：删除数组的第一个元素，并返回被删除的元素，后续元素会向前移动一个位置 unshift()：像数组开头添加一个或多个元素，并返回新的数组长度，同时，原有元素会后移一个位置 concat()：将两个或多个数组合并成一个新的数组，并返回该数组 slice()：返回一个新的数组，包含原数组中指定的部分元素。原数组不会被修改 splice()：从数组中添加、删除或替换元素，并返回被删除的元素，原数组会被修改 indexOf()：返回数组中第一个匹配到的元素的索引，如果没有找到则返回-1 includes()：判断数组中是否包含某个元素，返回一个布尔值 forEach()：遍历数组并对每个元素执行指定操作 map()：创建一个新数组，包含对原数组中每个元素执行指定操作后的结果 filter()：创建一个新数组，包含符合条件的所有元素 reverse()：反转数组中元素的顺序 find()：返回数组中满足条件的第一个元素，如果没有找到则返回undefined findIndex()：返回数组中满足条件的第一个元素的索引，如果没有找到则返回-1 some()：检测数组中是否至少有一个元素满足条件，返回一个布尔值 every()：检测数组中是否所有元素都满足条件，返回一个布尔值 join()：将数组中的所有元素以指定分割符连接成一个字符串","head":[["meta",{"property":"og:url","content":"https://xianyufs.top/%E5%89%8D%E7%AB%AF/%E9%9D%A2%E8%AF%95%E9%A2%98/js%E5%9F%BA%E7%A1%80"}],["meta",{"property":"og:site_name","content":"咸鱼要翻身"}],["meta",{"property":"og:title","content":"js"}],["meta",{"property":"og:description","content":"js 数组的常用方法 push()：向数组末尾添加一个或多个元素，并返回新的数组长度4 pop()：删除数组最后一个元素，并返回被删除的元素 shift()：删除数组的第一个元素，并返回被删除的元素，后续元素会向前移动一个位置 unshift()：像数组开头添加一个或多个元素，并返回新的数组长度，同时，原有元素会后移一个位置 concat()：将两个或多个数组合并成一个新的数组，并返回该数组 slice()：返回一个新的数组，包含原数组中指定的部分元素。原数组不会被修改 splice()：从数组中添加、删除或替换元素，并返回被删除的元素，原数组会被修改 indexOf()：返回数组中第一个匹配到的元素的索引，如果没有找到则返回-1 includes()：判断数组中是否包含某个元素，返回一个布尔值 forEach()：遍历数组并对每个元素执行指定操作 map()：创建一个新数组，包含对原数组中每个元素执行指定操作后的结果 filter()：创建一个新数组，包含符合条件的所有元素 reverse()：反转数组中元素的顺序 find()：返回数组中满足条件的第一个元素，如果没有找到则返回undefined findIndex()：返回数组中满足条件的第一个元素的索引，如果没有找到则返回-1 some()：检测数组中是否至少有一个元素满足条件，返回一个布尔值 every()：检测数组中是否所有元素都满足条件，返回一个布尔值 join()：将数组中的所有元素以指定分割符连接成一个字符串"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-10-03T02:26:09.000Z"}],["meta",{"property":"article:author","content":"guoyz"}],["meta",{"property":"article:published_time","content":"2023-09-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-10-03T02:26:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"js\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-28T00:00:00.000Z\\",\\"dateModified\\":\\"2023-10-03T02:26:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"guoyz\\",\\"url\\":\\"https://xianyufs.top\\",\\"email\\":\\"78300406@qq.com\\"}]}"]]},"headers":[{"level":3,"title":"数组的常用方法","slug":"数组的常用方法","link":"#数组的常用方法","children":[]},{"level":3,"title":"如何判断变量的类型","slug":"如何判断变量的类型","link":"#如何判断变量的类型","children":[]},{"level":3,"title":"JavaScript中如何终止网络请求","slug":"javascript中如何终止网络请求","link":"#javascript中如何终止网络请求","children":[]},{"level":3,"title":"什么是BOM和DOM？分别列举一些他们的函数？","slug":"什么是bom和dom-分别列举一些他们的函数","link":"#什么是bom和dom-分别列举一些他们的函数","children":[]},{"level":3,"title":"深拷贝和浅拷贝有什么区别？JS怎么实现深拷贝？","slug":"深拷贝和浅拷贝有什么区别-js怎么实现深拷贝","link":"#深拷贝和浅拷贝有什么区别-js怎么实现深拷贝","children":[]},{"level":3,"title":"如何使用JavaScript来判断用户设备类型？比如判断是PC访问还是移动端访问？","slug":"如何使用javascript来判断用户设备类型-比如判断是pc访问还是移动端访问","link":"#如何使用javascript来判断用户设备类型-比如判断是pc访问还是移动端访问","children":[]},{"level":3,"title":"JS数组是如何在内存中存储的？","slug":"js数组是如何在内存中存储的","link":"#js数组是如何在内存中存储的","children":[]},{"level":3,"title":"JS中的Map和WeakMap有什么区别？","slug":"js中的map和weakmap有什么区别","link":"#js中的map和weakmap有什么区别","children":[]},{"level":3,"title":"JS中怎么阻止事件冒泡和事件默认行为？","slug":"js中怎么阻止事件冒泡和事件默认行为","link":"#js中怎么阻止事件冒泡和事件默认行为","children":[]},{"level":3,"title":"什么防抖和节流？如何使用JS编码实现？","slug":"什么防抖和节流-如何使用js编码实现","link":"#什么防抖和节流-如何使用js编码实现","children":[]},{"level":3,"title":"什么是虚拟DOM？使用虚拟DOM一定会更快吗？(可以结合vue中的diff算法看一看)","slug":"什么是虚拟dom-使用虚拟dom一定会更快吗-可以结合vue中的diff算法看一看","link":"#什么是虚拟dom-使用虚拟dom一定会更快吗-可以结合vue中的diff算法看一看","children":[]},{"level":3,"title":"JS 脚本延迟加载的方式有哪些？","slug":"js-脚本延迟加载的方式有哪些","link":"#js-脚本延迟加载的方式有哪些","children":[]},{"level":3,"title":"什么是 JS 对象的可枚举性（enumerable）？","slug":"什么是-js-对象的可枚举性-enumerable","link":"#什么是-js-对象的可枚举性-enumerable","children":[]},{"level":3,"title":"JS 如何顺序执行 10 个异步任务？","slug":"js-如何顺序执行-10-个异步任务","link":"#js-如何顺序执行-10-个异步任务","children":[]},{"level":3,"title":"介绍一下 JS 中 setTimeout 的运行机制？","slug":"介绍一下-js-中-settimeout-的运行机制","link":"#介绍一下-js-中-settimeout-的运行机制","children":[]},{"level":3,"title":"怎么用 JS 实现大型文件上传？要考虑哪些问题？","slug":"怎么用-js-实现大型文件上传-要考虑哪些问题","link":"#怎么用-js-实现大型文件上传-要考虑哪些问题","children":[]},{"level":3,"title":"为什么 JS 要被设计为单线程？","slug":"为什么-js-要被设计为单线程","link":"#为什么-js-要被设计为单线程","children":[]},{"level":3,"title":"JS 代码中的 use strict 是什么？有什么作用？","slug":"js-代码中的-use-strict-是什么-有什么作用","link":"#js-代码中的-use-strict-是什么-有什么作用","children":[]},{"level":3,"title":"如何使用 JS 判断某个字符串长度（要求支持 Emoji 表情）？","slug":"如何使用-js-判断某个字符串长度-要求支持-emoji-表情","link":"#如何使用-js-判断某个字符串长度-要求支持-emoji-表情","children":[]},{"level":3,"title":"JS 在什么情况下会存在数字精度丢失的问题，如何解决？","slug":"js-在什么情况下会存在数字精度丢失的问题-如何解决","link":"#js-在什么情况下会存在数字精度丢失的问题-如何解决","children":[]},{"level":3,"title":"说说你对 TypeScript 的理解？与 JavaScript 的区别？","slug":"说说你对-typescript-的理解-与-javascript-的区别","link":"#说说你对-typescript-的理解-与-javascript-的区别","children":[]},{"level":3,"title":"TypeScript 的内置数据类型有哪些？","slug":"typescript-的内置数据类型有哪些","link":"#typescript-的内置数据类型有哪些","children":[]},{"level":3,"title":"TypeScript 中的 Declare 关键字有什么用？","slug":"typescript-中的-declare-关键字有什么用","link":"#typescript-中的-declare-关键字有什么用","children":[]},{"level":3,"title":"什么是 TypeScript 中的命名空间和模块？两者有什么区别？","slug":"什么是-typescript-中的命名空间和模块-两者有什么区别","link":"#什么是-typescript-中的命名空间和模块-两者有什么区别","children":[]},{"level":3,"title":"ES6 有哪些新特性？","slug":"es6-有哪些新特性","link":"#es6-有哪些新特性","children":[]},{"level":3,"title":"ES5 中的类和 ES6 中的 class 有什么区别？","slug":"es5-中的类和-es6-中的-class-有什么区别","link":"#es5-中的类和-es6-中的-class-有什么区别","children":[]},{"level":3,"title":"什么是 ES6 中的 Promise？它的使用场景有哪些？","slug":"什么是-es6-中的-promise-它的使用场景有哪些","link":"#什么是-es6-中的-promise-它的使用场景有哪些","children":[]},{"level":3,"title":"什么是箭头函数？能使用 new 来创建箭头函数么？","slug":"什么是箭头函数-能使用-new-来创建箭头函数么","link":"#什么是箭头函数-能使用-new-来创建箭头函数么","children":[]},{"level":3,"title":"ES6 中的 Reflect 对象有什么用？","slug":"es6-中的-reflect-对象有什么用","link":"#es6-中的-reflect-对象有什么用","children":[]},{"level":3,"title":"Eventloop","slug":"eventloop","link":"#eventloop","children":[]}],"git":{"createdTime":1695264787000,"updatedTime":1696299969000,"contributors":[{"name":"guoyz","email":"18733972792@163.com","commits":2},{"name":"guoyz","email":"guoyz10@lenovo.com","commits":1}]},"readingTime":{"minutes":4.37,"words":1312},"filePathRelative":"前端/面试题/js基础.md","localizedDate":"2023年9月28日","excerpt":"<h1> js</h1>\\n<h3> 数组的常用方法</h3>\\n<ol>\\n<li>push()：向数组末尾添加一个或多个元素，并返回新的数组长度4</li>\\n<li>pop()：删除数组最后一个元素，并返回被删除的元素</li>\\n<li>shift()：删除数组的第一个元素，并返回被删除的元素，后续元素会向前移动一个位置</li>\\n<li>unshift()：像数组开头添加一个或多个元素，并返回新的数组长度，同时，原有元素会后移一个位置</li>\\n<li>concat()：将两个或多个数组合并成一个新的数组，并返回该数组</li>\\n<li>slice()：返回一个新的数组，包含原数组中指定的部分元素。原数组不会被修改</li>\\n<li>splice()：从数组中添加、删除或替换元素，并返回被删除的元素，原数组会被修改</li>\\n<li>indexOf()：返回数组中第一个匹配到的元素的索引，如果没有找到则返回-1</li>\\n<li>includes()：判断数组中是否包含某个元素，返回一个布尔值</li>\\n<li>forEach()：遍历数组并对每个元素执行指定操作</li>\\n<li>map()：创建一个新数组，包含对原数组中每个元素执行指定操作后的结果</li>\\n<li>filter()：创建一个新数组，包含符合条件的所有元素</li>\\n<li>reverse()：反转数组中元素的顺序</li>\\n<li>find()：返回数组中满足条件的第一个元素，如果没有找到则返回undefined</li>\\n<li>findIndex()：返回数组中满足条件的第一个元素的索引，如果没有找到则返回-1</li>\\n<li>some()：检测数组中是否至少有一个元素满足条件，返回一个布尔值</li>\\n<li>every()：检测数组中是否所有元素都满足条件，返回一个布尔值</li>\\n<li>join()：将数组中的所有元素以指定分割符连接成一个字符串</li>\\n</ol>","autoDesc":true}');export{e as data};
