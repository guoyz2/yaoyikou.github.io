import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-2b248397.js";const p={},e=t(`<h1 id="请求轮询" tabindex="-1"><a class="header-anchor" href="#请求轮询" aria-hidden="true">#</a> 请求轮询</h1><p>需求：大模型评测系统有一个测试执行的功能，需求方要求测试开始执行之后，页面实时获取结果打印日志</p><p>解决方案：使用定时器 + 递归轮询发送请求更新页面数据</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 绑定显示日志的 html 容器</span>
<span class="token keyword">const</span> logsContent <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLInputElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
<span class="token comment">// 开始查询日志</span>
<span class="token keyword">let</span> timer<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>
<span class="token keyword">const</span> <span class="token function-variable function">getLogsInfo</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
  <span class="token comment">// 封装的 axios 请求获取数据</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>err<span class="token punctuation">,</span> res<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">benchmarkExecLogsApi</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token comment">// 接口传递的参数</span>
    environment_name<span class="token operator">:</span> currentEnv<span class="token operator">?.</span>value <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    model_name<span class="token operator">:</span> currentModel<span class="token operator">?.</span>value<span class="token punctuation">.</span>model_name <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
    version_name<span class="token operator">:</span> currentVersion<span class="token operator">?.</span>value <span class="token keyword">as</span> <span class="token builtin">string</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">return</span> Message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>Message<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    logs<span class="token punctuation">.</span>info <span class="token operator">=</span> res<span class="token punctuation">.</span>data
    <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token keyword">const</span> logsContent <span class="token operator">=</span> <span class="token generic-function"><span class="token function">ref</span><span class="token generic class-name"><span class="token operator">&lt;</span>HTMLInputElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// 数据更新后，日志显示部分滚动条滚动到最底部</span>
      logsContent<span class="token punctuation">.</span>value<span class="token operator">?.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        top<span class="token operator">:</span> logsContent<span class="token punctuation">.</span>value<span class="token operator">?.</span>scrollHeight
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 根据后端返回判断当前测试是否执行完毕，如果没有执行完毕，5秒后重新调用接口</span>
    currentStatus<span class="token operator">?.</span>value <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>status
    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentStatus<span class="token operator">?.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 如果当前环境处于运行状态，30s后获取该环境的日志</span>
      timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">getLogsInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  Message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">&#39;request failed&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">getLogsInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),o=[e];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","请求轮询.html.vue"]]);export{k as default};
