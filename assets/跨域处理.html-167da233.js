import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c,a as n,b as a,d as i,e as s}from"./app-2b248397.js";const l={},u=s(`<h1 id="跨域问题产生的原因及解决办法" tabindex="-1"><a class="header-anchor" href="#跨域问题产生的原因及解决办法" aria-hidden="true">#</a> 跨域问题产生的原因及解决办法</h1><h2 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h2><p>跨域是因为浏览器同源策略的限制，是浏览器的一种安全机制。同源是指协议、域名、端口号完全相同，如果有任意一个不同就会产生跨域</p><h2 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h2><h3 id="_1-jsonp" tabindex="-1"><a class="header-anchor" href="#_1-jsonp" aria-hidden="true">#</a> 1.jsonp</h3><p>jsonp 的原理是浏览器的同源策略限制了页面向非同源服务器发送http请求，但是没有限制向非同源服务器请求js脚本。我们可以使用 script、img、a 这些标签来向服务器发送请求，这种方式有两点需要注意。</p><ol><li>需要服务端支持</li><li>只能使用 get 请求</li></ol><p>使用方法如下：</p><ol><li>服务端支持jsonp，通过参数获取前端定义的方法名</li><li>将返回值类型设置为&#39;text/javascript&#39;</li><li>通过将结果放入方法的参数中返回给前端</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/jsonp&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    callback <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>callback
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&quot;张三&quot;</span>
    <span class="token punctuation">}</span>
    res<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&#39;text/javascript&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>callback<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;监听3000端口&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>前端发起请求</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token keyword">let</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">let</span> filed <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">callback</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        window<span class="token punctuation">[</span>filed<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        script<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://localhost:3000/jsonp?callback=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>filed<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span>
        script<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span>
            <span class="token keyword">delete</span> window<span class="token punctuation">[</span>filed<span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>查看结果</li></ol><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230925171447316.png" alt="结果获取成功" tabindex="0" loading="lazy"><figcaption>结果获取成功</figcaption></figure><h3 id="_2-后端配置允许跨域" tabindex="-1"><a class="header-anchor" href="#_2-后端配置允许跨域" aria-hidden="true">#</a> 2.后端配置允许跨域</h3><p>后端在响应头中添加以下内容(以express为例)</p><p>使用express启动一个后端，并暴露一个/hello接口</p><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230925104151002.png" alt="express服务" tabindex="0" loading="lazy"><figcaption>express服务</figcaption></figure><p>然后使用前端去请求这个接口，代码如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.bootcdn.net/ajax/libs/axios/1.5.0/axios.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;http://localhost:3000/hello&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打开html对应会发现报了跨域错误</p><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230925105029011.png" alt="跨域报错" tabindex="0" loading="lazy"><figcaption>跨域报错</figcaption></figure><p>然后我们在响应头中加入Access-Control-Allow-Origin：*，请求就可以成功调用了</p><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230925105355580.png" alt="添加响应头" tabindex="0" loading="lazy"><figcaption>添加响应头</figcaption></figure><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230925105431411.png" alt="前端请求正常" tabindex="0" loading="lazy"><figcaption>前端请求正常</figcaption></figure><h3 id="_3-反向代理" tabindex="-1"><a class="header-anchor" href="#_3-反向代理" aria-hidden="true">#</a> 3.反向代理</h3><p>因为同源策略是浏览器的安全策略，所以我们可以通过一个中间服务器去代理发起请求。</p><h4 id="开发环境" tabindex="-1"><a class="header-anchor" href="#开发环境" aria-hidden="true">#</a> 开发环境</h4><p>工程化项目的开发环境下，可以使用 webpack 或者 vite 启动一个开发服务器配置代理去将固定前缀的地址转发给后端。下面我们使用vue-cli初始化一个工程化框架并进行配置</p>`,29),r={href:"https://next.cli.vuejs.org/zh/guide/installation.html",target:"_blank",rel:"noopener noreferrer"},k=s('<ol><li>我们将刚才后端加上的响应头注释掉</li><li>然后在 main.ts 中使用 axios 发起 http 请求</li><li>然后再 webpack 中添加代理服务器的配置</li></ol><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230925113109585.png" alt="使用axios发起http请求" tabindex="0" loading="lazy"><figcaption>使用axios发起http请求</figcaption></figure><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230925113036873.png" alt="webpack配置代理服务器" tabindex="0" loading="lazy"><figcaption>webpack配置代理服务器</figcaption></figure><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230925113209038.png" alt="运行项目查看效果，代理请求成功" tabindex="0" loading="lazy"><figcaption>运行项目查看效果，代理请求成功</figcaption></figure><h4 id="生产环境" tabindex="-1"><a class="header-anchor" href="#生产环境" aria-hidden="true">#</a> 生产环境</h4><p>生产环境的情况下，我们一般使用 nginx 部署，nginx 的代理配置如下</p><ol><li>将打包后的静态资源文件移动到 nginx 的 html 目录下</li><li>nginx 配置文件中添加代理配置</li><li>访问 nginx 的web服务查看结果</li></ol><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230925114551589.png" alt="nginx配置文件中添加代理配置" tabindex="0" loading="lazy"><figcaption>nginx配置文件中添加代理配置</figcaption></figure><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230925114703302.png" alt="代理请求成功" tabindex="0" loading="lazy"><figcaption>代理请求成功</figcaption></figure>',9);function d(g,m){const t=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[a("vue-cli 创建工程化项目教程"),n("a",r,[a("https://next.cli.vuejs.org/zh/guide/installation.html"),i(t)])]),k])}const b=p(l,[["render",d],["__file","跨域处理.html.vue"]]);export{b as default};
