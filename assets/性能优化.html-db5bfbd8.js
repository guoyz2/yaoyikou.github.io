import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as r}from"./app-2b248397.js";const t={},h=r('<h1 id="前端性能优化" tabindex="-1"><a class="header-anchor" href="#前端性能优化" aria-hidden="true">#</a> 前端性能优化</h1><h3 id="说说常规的前端性能优化手段" tabindex="-1"><a class="header-anchor" href="#说说常规的前端性能优化手段" aria-hidden="true">#</a> 说说常规的前端性能优化手段</h3><ol><li>减少http请求：使用压缩工具来减小文件大小，并将多个小文件合并成一个大文件，减少HTTP请求次数，使用缓存技术（localStorage、SessionStorage）存储数据，提升页面加载速度</li><li>减少重绘和回流：避免频繁的DOM操作和样式改变，使用CSS3动画代替JavaScript 动画，减少页面的重绘和回流</li><li>使用CDN加速：将静态资源部署再 CDN 上，使用户能够从离自己最近的服务器获取资源，提高加载速度</li><li>图片优化：使用合适的图片格式来减小图片文件的大小，使用图片压缩工具来优化图片</li><li>懒加载：延迟加载非关键资源，当用户需要访问时再进行加载，减少初始加载的资源量</li><li>资源缓存：通过设置适当的缓存策略（例如设置HTTP响应头的Cache-Control来让浏览器缓存资源，减少重复的网络请求）</li></ol><h3 id="前端性能优化指标有哪些-怎么进行性能检测" tabindex="-1"><a class="header-anchor" href="#前端性能优化指标有哪些-怎么进行性能检测" aria-hidden="true">#</a> 前端性能优化指标有哪些？怎么进行性能检测？</h3><h3 id="浏览器的重绘与回流" tabindex="-1"><a class="header-anchor" href="#浏览器的重绘与回流" aria-hidden="true">#</a> 浏览器的重绘与回流</h3>',5),l=[h];function o(c,d){return a(),i("div",null,l)}const _=e(t,[["render",o],["__file","性能优化.html.vue"]]);export{_ as default};
