const t=JSON.parse('{"key":"v-baee6a5a","path":"/%E5%89%8D%E7%AB%AF/js/%E8%B7%A8%E5%9F%9F%E5%A4%84%E7%90%86.html","title":"跨域问题产生的原因及解决办法","lang":"zh-CN","frontmatter":{"toc":true,"article":true,"editLink":false,"date":"2023-09-25T00:00:00.000Z","category":["前端","跨域","js"],"description":"跨域问题产生的原因及解决办法 原因 跨域是因为浏览器同源策略的限制，是浏览器的一种安全机制。同源是指协议、域名、端口号完全相同，如果有任意一个不同就会产生跨域 解决方法 1.jsonp jsonp 的原理是浏览器的同源策略限制了页面向非同源服务器发送http请求，但是没有限制向非同源服务器请求js脚本。我们可以使用 script、img、a 这些标签来向服务器发送请求，这种方式有两点需要注意。 需要服务端支持 只能使用 get 请求","head":[["meta",{"property":"og:url","content":"https://xianyufs.top/%E5%89%8D%E7%AB%AF/js/%E8%B7%A8%E5%9F%9F%E5%A4%84%E7%90%86"}],["meta",{"property":"og:site_name","content":"咸鱼要翻身"}],["meta",{"property":"og:title","content":"跨域问题产生的原因及解决办法"}],["meta",{"property":"og:description","content":"跨域问题产生的原因及解决办法 原因 跨域是因为浏览器同源策略的限制，是浏览器的一种安全机制。同源是指协议、域名、端口号完全相同，如果有任意一个不同就会产生跨域 解决方法 1.jsonp jsonp 的原理是浏览器的同源策略限制了页面向非同源服务器发送http请求，但是没有限制向非同源服务器请求js脚本。我们可以使用 script、img、a 这些标签来向服务器发送请求，这种方式有两点需要注意。 需要服务端支持 只能使用 get 请求"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-26T04:14:55.000Z"}],["meta",{"property":"article:author","content":"guoyz"}],["meta",{"property":"article:published_time","content":"2023-09-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-26T04:14:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"跨域问题产生的原因及解决办法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-26T04:14:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"guoyz\\",\\"url\\":\\"https://xianyufs.top\\",\\"email\\":\\"78300406@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"原因","slug":"原因","link":"#原因","children":[]},{"level":2,"title":"解决方法","slug":"解决方法","link":"#解决方法","children":[{"level":3,"title":"1.jsonp","slug":"_1-jsonp","link":"#_1-jsonp","children":[]},{"level":3,"title":"2.后端配置允许跨域","slug":"_2-后端配置允许跨域","link":"#_2-后端配置允许跨域","children":[]},{"level":3,"title":"3.反向代理","slug":"_3-反向代理","link":"#_3-反向代理","children":[]}]}],"git":{"createdTime":1695264787000,"updatedTime":1695701695000,"contributors":[{"name":"guoyz","email":"18733972792@163.com","commits":1},{"name":"guoyz","email":"guoyz10@lenovo.com","commits":1}]},"readingTime":{"minutes":3.01,"words":903},"filePathRelative":"前端/js/跨域处理.md","localizedDate":"2023年9月25日","excerpt":"<h1> 跨域问题产生的原因及解决办法</h1>\\n<h2> 原因</h2>\\n<p>跨域是因为浏览器同源策略的限制，是浏览器的一种安全机制。同源是指协议、域名、端口号完全相同，如果有任意一个不同就会产生跨域</p>\\n<h2> 解决方法</h2>\\n<h3> 1.jsonp</h3>\\n<p>jsonp 的原理是浏览器的同源策略限制了页面向非同源服务器发送http请求，但是没有限制向非同源服务器请求js脚本。我们可以使用 script、img、a 这些标签来向服务器发送请求，这种方式有两点需要注意。</p>\\n<ol>\\n<li>需要服务端支持</li>\\n<li>只能使用 get 请求</li>\\n</ol>","autoDesc":true}');export{t as data};
