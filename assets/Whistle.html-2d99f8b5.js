import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o,c as r,a,b as e,d as s,e as i}from"./app-2b248397.js";const c={},p=a("h1",{id:"whistle-抓包工具使用",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#whistle-抓包工具使用","aria-hidden":"true"},"#"),e(" Whistle 抓包工具使用")],-1),d={href:"https://wproxy.org/whistle/",target:"_blank",rel:"noopener noreferrer"},m=i(`<h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> whistle
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看帮助信息</span>
w2 <span class="token builtin class-name">help</span>
<span class="token comment"># 启动whistle</span>
w2 start
<span class="token comment"># 停止whistle</span>
w2 stop
<span class="token comment"># 调试模式启动whistle(主要用于查看whistle的异常及插件开发)</span>
w2 run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230928104951357.png" alt="启动whistle" tabindex="0" loading="lazy"><figcaption>启动whistle</figcaption></figure>`,5),h={href:"http://127.0.0.1:8899",target:"_blank",rel:"noopener noreferrer"},g=i(`<h2 id="配置代理" tabindex="-1"><a class="header-anchor" href="#配置代理" aria-hidden="true">#</a> 配置代理</h2><h3 id="全局代理" tabindex="-1"><a class="header-anchor" href="#全局代理" aria-hidden="true">#</a> 全局代理</h3><p>windows 使用命令行配置全局代理：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 设置本机默认 whistle 实例代理</span>
w2 proxy
<span class="token comment"># 指定端口</span>
w2 proxy <span class="token operator">&lt;</span>端口号<span class="token operator">&gt;</span>
<span class="token comment"># 指定域名（ip）和端口号的代理</span>
w2 proxy <span class="token operator">&lt;</span>域名:端口号<span class="token operator">&gt;</span>
<span class="token comment"># 设置本机默认 whistle 实例代理，并设置不代理请求的域名</span>
w2 proxy <span class="token parameter variable">-x</span> <span class="token string">&quot;www.test.com, www.abc.com, *.xxx.com&quot;</span>
<span class="token comment"># 设置指定指定域名（ip）和端口号的代理，并设置不代理请求的域名</span>
w2 proxy <span class="token operator">&lt;</span>xxx.domain.com:888<span class="token operator"><span class="token file-descriptor important">8</span>&gt;</span> <span class="token parameter variable">-x</span> <span class="token string">&quot;www.test.com, www.abc.com, *.xxx.com&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="浏览器代理" tabindex="-1"><a class="header-anchor" href="#浏览器代理" aria-hidden="true">#</a> 浏览器代理</h3>`,5),u={href:"https://pan.baidu.com/s/1DGn6QVZRQq-2TQRhwOKL_Q?pwd=ziw8#list/path=%2F",target:"_blank",rel:"noopener noreferrer"},v=i(`<ol><li><p>下载网盘中的 SwitchyOmega_Chromium.rar 文件并解压</p></li><li><p>谷歌浏览器地址栏输入 <code>chrome://extensions/</code></p></li><li><p>选择加载已解压的扩展程序插件，选中刚才解压的 SwitchyOmega_Chromium</p></li><li><p>在 SwitchyOmega 配置启动的 whistle 服务</p></li><li><p>点击扩展程序图标选择 SwitchyOmega</p></li><li><p>将 SwitchyOmega 设置为 proxy 情景模式</p></li><li><p>设置自动切换情景模式可以控制哪些网站走代理抓包（需要将 SwitchyOmega 设置为 auto switch 情景模式，方法同6）</p></li></ol><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230928120352520.png" alt="加载已解压的扩展程序" tabindex="0" loading="lazy"><figcaption>加载已解压的扩展程序</figcaption></figure><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230928120626504.png" alt="插件安装成功" tabindex="0" loading="lazy"><figcaption>插件安装成功</figcaption></figure><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230928120826133.png" alt="配置刚刚启动的whistle服务" tabindex="0" loading="lazy"><figcaption>配置刚刚启动的whistle服务</figcaption></figure><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230928123229557.png" alt="点击扩展程序图标选择 SwitchyOmega" tabindex="0" loading="lazy"><figcaption>点击扩展程序图标选择 SwitchyOmega</figcaption></figure><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230928123109209.png" alt="将 SwitchyOmega 设置为 proxy 情景模式" tabindex="0" loading="lazy"><figcaption>将 SwitchyOmega 设置为 proxy 情景模式</figcaption></figure><figure><img src="https://chart-1253420647.cos.ap-beijing.myqcloud.com/markdown/image-20230928123441743.png" alt="设置自动切换情景模式可以控制哪些网站走代理抓包" tabindex="0" loading="lazy"><figcaption>设置自动切换情景模式可以控制哪些网站走代理抓包</figcaption></figure><h3 id="移动端代理-使用时再补充" tabindex="-1"><a class="header-anchor" href="#移动端代理-使用时再补充" aria-hidden="true">#</a> 移动端代理（使用时再补充）</h3><h2 id="安装-ca-证书" tabindex="-1"><a class="header-anchor" href="#安装-ca-证书" aria-hidden="true">#</a> 安装 ca 证书</h2><p>抓 https 的包需要安装 ca 证书</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装本机默认的 whistle 实例的证书</span>
w2 ca
<span class="token comment"># 安装指定端口的 whistle 实例的证书</span>
w2 ca <span class="token operator">&lt;</span>端口号<span class="token operator">&gt;</span>
<span class="token comment"># 安装指定域名（ip）和端口号的 whistle 实例的证书</span>
w2 ca <span class="token operator">&lt;</span>域名:端口号<span class="token operator">&gt;</span>
<span class="token comment"># 下载指定 url 的根证书并安装</span>
w2 ca <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span>
<span class="token comment"># 下载指定本地路径的根证书并安装</span>
w2 ca <span class="token operator">&lt;</span>文件路径<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11);function b(w,f){const n=l("ExternalLinkIcon");return o(),r("div",null,[p,a("p",null,[e("官网："),a("a",d,[e("https://wproxy.org/whistle/"),s(n)])]),m,a("p",null,[e("打开 "),a("a",h,[e("http://127.0.0.1:8899"),s(n)]),e(" 就可以抓包了")]),g,a("p",null,[a("a",u,[e("谷歌浏览器插件下载"),s(n)])]),v])}const y=t(c,[["render",b],["__file","Whistle.html.vue"]]);export{y as default};
